createContact("location", c("HCM", "HN"), comb_df)
createContact("location", c("HCM", "HN"), comb_df[3])
createContact("location", c("HCM", "HN"), comb_df$format)
names(contactList[[1]])
names(contactList)
contactList[[1]]
contactList <- list(age = c("0_14", "15_64", "65"), location = c("HCM", "HN"))
# Contact JSON
contactJSONList <- list()
for (i in 1:length(contactList)) {
comb_df <- data.frame(combinations(length(contactList[[i]]), 2, contactList[[i]], repeats = TRUE))
comb_df$contactFormat <- paste0(comb_df[,1], " <-> ", comb_df[,2])
contactJSONList[[i]] <- createContact(names(contactList)[i], contactList[i], comb_df$contactFormat)
}
contactJSONList
makeJSONElement("contacts", contactJSONList)
makeJSONElement <- function(label, elementList) {
output <- paste0("\"", label, "\": [\n")
for (i in 1:length(elementList)) {
output <- paste0(output, elementList[i])
if (i < length(elementList)) {
output <- paste0(output, ", \n")
}
}
output <- paste0(output, "\n]")
return(output)
}
makeJSONElement("contacts", contactJSONList)
cat(makeJSONElement("contacts", contactJSONList))
contactList[i]
contactList[[i]]
# Contact JSON
contactJSONList <- list()
for (i in 1:length(contactList)) {
comb_df <- data.frame(combinations(length(contactList[[i]]), 2, contactList[[i]], repeats = TRUE))
comb_df$contactFormat <- paste0(comb_df[,1], " <-> ", comb_df[,2])
contactJSONList[[i]] <- createContact(names(contactList)[i], contactList[[i]], comb_df$contactFormat)
}
cat(makeJSONElement("contacts", contactJSONList))
vec <- c(0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0)
M <- matrix(vec, nrow = 4, byrow = TRUE)
M
?read.csv
df <- read.csv("/home/thinh/Dropbox/oucru/rcpp/testRcpp/age.csv", header = TRUE, row.names = 1)
df
df <- read.csv("/home/thinh/Dropbox/oucru/rcpp/testRcpp/age.csv",
header = TRUE, check.names = FALSE, row.names = 1)
df
M <- read.csv("/home/thinh/Dropbox/oucru/rcpp/testRcpp/age.csv",
header = TRUE, check.names = FALSE, row.names = 1)
wM <- which(M > 0, arr.ind = TRUE)
wM
matrix(sort(paste(rownames(wM), colnames(M)[wM[,2]], sep = ",")))
sort(paste(rownames(wM), colnames(M)[wM[,2]], sep = ","))
M <- read.csv("/home/thinh/Dropbox/oucru/rcpp/testRcpp/age.csv",
header = TRUE, check.names = FALSE, row.names = 1)
M
upper.tri(M)
upper.tri(M, diag = TRUE)
M[upper.tri(M, diag = TRUE)]
ind <- which(upper.tri(M, diag=F), arr.ind = TRUE)
ind
ind <- which(upper.tri(M, diag = TRUE), arr.ind = TRUE)
ind
data.frame(col = dimnames(x)[[2]][ind[,2]],
row = dimnames(x)[[1]][ind[,1]],
val = x[ind])
data.frame(col = dimnames(x)[[2]][ind[,2]],
row = dimnames(x)[[1]][ind[,1]],
val = M[ind])
x <- read.csv("/home/thinh/Dropbox/oucru/rcpp/testRcpp/age.csv",
header = TRUE, check.names = FALSE, row.names = 1)
ind <- which(upper.tri(x, diag = TRUE), arr.ind = TRUE)
data.frame(col = dimnames(x)[[2]][ind[,2]],
row = dimnames(x)[[1]][ind[,1]],
val = x[ind])
data.frame(row = dimnames(x)[[1]][ind[,1]],
col = dimnames(x)[[2]][ind[,2]],
val = x[ind])
df <- data.frame(row = dimnames(contactMatrix)[[1]][ind[,1]],
col = dimnames(contactMatrix)[[2]][ind[,2]],
val = contactMatrix[ind])
getPairContactFromMatrix <- function(contactMatrix) {
ind <- which(upper.tri(contactMatrix, diag = TRUE), arr.ind = TRUE)
df <- data.frame(row = dimnames(contactMatrix)[[1]][ind[,1]],
col = dimnames(contactMatrix)[[2]][ind[,2]],
val = contactMatrix[ind])
df$contact <- paste0(df$row, " <-> ", df$col, ": ", df$val)
return(df$contact)
}
M <- read.csv("/home/thinh/Dropbox/oucru/rcpp/testRcpp/age.csv",
header = TRUE, check.names = FALSE, row.names = 1)
getPairContactFromMatrix(M)
library(discreteModel)
library(discreteModel)
library(jsonlite)
library(gtools)
# Model
ms <- setModelStructure("S->I", "I->R")
ic <- setInfectiousComps("I")
ca <- setContactAssumption("location")
contacts <- createContact("location", c("HCM", "HN"), c("HCM <-> HCM: 0.85", "HCM <-> HN: 0.1", "HN <-> HN: 0.95"))
S_HCM <- createCompartment(name = "S",
distribution = createDistribution("transitionProb", transitionProb = 0.0),
initialValue = 1000)
I_HCM <- createCompartment(name = "I",
distribution = createDistribution("exponential", rate = 0.3),
initialValue = 1)
R_HCM <- createCompartment(name = "R",
distribution = createDistribution("transitionProb", transitionProb = 0.0),
initialValue = 0)
S_HN <- createCompartment(name = "S",
distribution = createDistribution("transitionProb", transitionProb = 0.0),
initialValue = 699)
I_HN <- createCompartment(name = "I",
distribution = createDistribution("gamma", shape = 3, scale = 2),
initialValue = 1)
R_HN <- createCompartment(name = "R",
distribution = createDistribution("transitionProb", transitionProb = 0.0),
initialValue = 0)
HCM <- allCompartments(modelName = c("HCM"), transmissionRate = 1.5, S_HCM, I_HCM, R_HCM)
HN <- allCompartments(modelName = c("HN"), transmissionRate = 1.5, S_HN, I_HN, R_HN)
exportJSON <- allModels(daysFollowUp = 50002, modelStructure = ms,
infectiousComps = ic, contactAssumption = ca,
contacts = contacts, models = c(HCM, HN))
cat(exportJSON)
library(discreteModel)
library(discreteModel)
library(jsonlite)
library(gtools)
# Model
ms <- setModelStructure("S->I", "I->R")
ic <- setInfectiousComps("I")
ca <- setContactAssumption("location")
contacts <- createContact("location", c("HCM", "HN"), c("HCM <-> HCM: 0.85", "HCM <-> HN: 0.1", "HN <-> HN: 0.95"))
S_HCM <- createCompartment(name = "S",
distribution = createDistribution("transitionProb", transitionProb = 0.0),
initialValue = 1000)
I_HCM <- createCompartment(name = "I",
distribution = createDistribution("exponential", rate = 0.3),
initialValue = 1)
R_HCM <- createCompartment(name = "R",
distribution = createDistribution("transitionProb", transitionProb = 0.0),
initialValue = 0)
S_HN <- createCompartment(name = "S",
distribution = createDistribution("transitionProb", transitionProb = 0.0),
initialValue = 699)
I_HN <- createCompartment(name = "I",
distribution = createDistribution("gamma", shape = 3, scale = 2),
initialValue = 1)
R_HN <- createCompartment(name = "R",
distribution = createDistribution("transitionProb", transitionProb = 0.0),
initialValue = 0)
HCM <- allCompartments(modelName = c("HCM"), transmissionRate = 1.5, S_HCM, I_HCM, R_HCM)
HN <- allCompartments(modelName = c("HN"), transmissionRate = 1.5, S_HN, I_HN, R_HN)
exportJSON <- allModels(daysFollowUp = 50002, modelStructure = ms,
infectiousComps = ic, contactAssumption = ca,
contacts = contacts, models = c(HCM, HN))
cat(exportJSON)
simulation(exportJSON, "/home/thinh/Downloads")
library(discreteModel)
library(discreteModel)
library(jsonlite)
library(gtools)
# Model
ms <- setModelStructure("S->I", "I->R")
ic <- setInfectiousComps("I")
ca <- setContactAssumption("location")
contacts <- createContact("location", c("HCM", "HN"), c("HCM <-> HCM: 0.85", "HCM <-> HN: 0.1", "HN <-> HN: 0.95"))
S_HCM <- createCompartment(name = "S",
distribution = createDistribution("transitionProb", transitionProb = 0.0),
initialValue = 1000)
I_HCM <- createCompartment(name = "I",
distribution = createDistribution("exponential", rate = 0.3),
initialValue = 1)
R_HCM <- createCompartment(name = "R",
distribution = createDistribution("transitionProb", transitionProb = 0.0),
initialValue = 0)
S_HN <- createCompartment(name = "S",
distribution = createDistribution("transitionProb", transitionProb = 0.0),
initialValue = 699)
I_HN <- createCompartment(name = "I",
distribution = createDistribution("gamma", shape = 3, scale = 2),
initialValue = 1)
R_HN <- createCompartment(name = "R",
distribution = createDistribution("transitionProb", transitionProb = 0.0),
initialValue = 0)
HCM <- allCompartments(modelName = c("HCM"), transmissionRate = 1.5, S_HCM, I_HCM, R_HCM)
HN <- allCompartments(modelName = c("HN"), transmissionRate = 1.5, S_HN, I_HN, R_HN)
exportJSON <- allModels(daysFollowUp = 50002, modelStructure = ms,
infectiousComps = ic, contactAssumption = ca,
contacts = contacts, models = c(HCM, HN))
cat(exportJSON)
simulation(exportJSON, "/home/thinh/Downloads")
library(discreteModel)
library(discreteModel)
library(jsonlite)
library(gtools)
# Model
ms <- setModelStructure("S->I", "I->R")
ic <- setInfectiousComps("I")
ca <- setContactAssumption("location")
contacts <- createContact("location", c("HCM", "HN"), c("HCM <-> HCM: 0.85", "HCM <-> HN: 0.1", "HN <-> HN: 0.95"))
S_HCM <- createCompartment(name = "S",
distribution = createDistribution("transitionProb", transitionProb = 0.0),
initialValue = 1000)
I_HCM <- createCompartment(name = "I",
distribution = createDistribution("exponential", rate = 0.3),
initialValue = 1)
R_HCM <- createCompartment(name = "R",
distribution = createDistribution("transitionProb", transitionProb = 0.0),
initialValue = 0)
S_HN <- createCompartment(name = "S",
distribution = createDistribution("transitionProb", transitionProb = 0.0),
initialValue = 699)
I_HN <- createCompartment(name = "I",
distribution = createDistribution("gamma", shape = 3, scale = 2),
initialValue = 1)
R_HN <- createCompartment(name = "R",
distribution = createDistribution("transitionProb", transitionProb = 0.0),
initialValue = 0)
HCM <- allCompartments(modelName = c("HCM"), transmissionRate = 1.5, S_HCM, I_HCM, R_HCM)
HN <- allCompartments(modelName = c("HN"), transmissionRate = 1.5, S_HN, I_HN, R_HN)
exportJSON <- allModels(daysFollowUp = 50002, modelStructure = ms,
infectiousComps = ic, contactAssumption = ca,
contacts = contacts, models = c(HCM, HN))
cat(exportJSON)
simulation(exportJSON, "/home/thinh/Downloads")
library(discreteModel)
library(discreteModel)
library(jsonlite)
library(gtools)
# Model
ms <- setModelStructure("S->I", "I->R")
ic <- setInfectiousComps("I")
ca <- setContactAssumption("location")
contacts <- createContact("location", c("HCM", "HN"), c("HCM <-> HCM: 0.85", "HCM <-> HN: 0.1", "HN <-> HN: 0.95"))
S_HCM <- createCompartment(name = "S",
distribution = createDistribution("transitionProb", transitionProb = 0.0),
initialValue = 1000)
I_HCM <- createCompartment(name = "I",
distribution = createDistribution("exponential", rate = 0.3),
initialValue = 1)
R_HCM <- createCompartment(name = "R",
distribution = createDistribution("transitionProb", transitionProb = 0.0),
initialValue = 0)
S_HN <- createCompartment(name = "S",
distribution = createDistribution("transitionProb", transitionProb = 0.0),
initialValue = 699)
I_HN <- createCompartment(name = "I",
distribution = createDistribution("gamma", shape = 3, scale = 2),
initialValue = 1)
R_HN <- createCompartment(name = "R",
distribution = createDistribution("transitionProb", transitionProb = 0.0),
initialValue = 0)
HCM <- allCompartments(modelName = c("HCM"), transmissionRate = 1.5, S_HCM, I_HCM, R_HCM)
HN <- allCompartments(modelName = c("HN"), transmissionRate = 1.5, S_HN, I_HN, R_HN)
exportJSON <- allModels(daysFollowUp = 50002, modelStructure = ms,
infectiousComps = ic, contactAssumption = ca,
contacts = contacts, models = c(HCM, HN))
cat(exportJSON)
simulation(exportJSON)
df <- simulation(exportJSON)
View(df)
exportJSON <- allModels(daysFollowUp = 50002, timeStep = 0.01, modelStructure = ms,
infectiousComps = ic, contactAssumption = ca,
contacts = contacts, models = c(HCM, HN))
df <- simulation(exportJSON)
View(df)
library(discreteModel)
library(discreteModel)
library(jsonlite)
library(gtools)
# Model
ms <- setModelStructure("S->I", "I->R")
ic <- setInfectiousComps("I")
ca <- setContactAssumption("location")
contacts <- createContact("location", c("HCM", "HN"), c("HCM <-> HCM: 0.85", "HCM <-> HN: 0.1", "HN <-> HN: 0.95"))
S_HCM <- createCompartment(name = "S",
distribution = createDistribution("transitionProb", transitionProb = 0.0),
initialValue = 1000)
I_HCM <- createCompartment(name = "I",
distribution = createDistribution("exponential", rate = 0.3),
initialValue = 1)
R_HCM <- createCompartment(name = "R",
distribution = createDistribution("transitionProb", transitionProb = 0.0),
initialValue = 0)
S_HN <- createCompartment(name = "S",
distribution = createDistribution("transitionProb", transitionProb = 0.0),
initialValue = 699)
I_HN <- createCompartment(name = "I",
distribution = createDistribution("gamma", shape = 3, scale = 2),
initialValue = 1)
R_HN <- createCompartment(name = "R",
distribution = createDistribution("transitionProb", transitionProb = 0.0),
initialValue = 0)
HCM <- allCompartments(modelName = c("HCM"), transmissionRate = 1.5, S_HCM, I_HCM, R_HCM)
HN <- allCompartments(modelName = c("HN"), transmissionRate = 1.5, S_HN, I_HN, R_HN)
exportJSON <- allModels(daysFollowUp = 50002, timeStep = 0.01, modelStructure = ms,
infectiousComps = ic, contactAssumption = ca,
contacts = contacts, models = c(HCM, HN))
df <- simulation(exportJSON)
View(df)
library(discreteModel)
library(discreteModel)
library(jsonlite)
library(gtools)
# Model
ms <- setModelStructure("S->I", "I->R")
ic <- setInfectiousComps("I")
ca <- setContactAssumption("location")
contacts <- createContact("location", c("HCM", "HN"), c("HCM <-> HCM: 0.85", "HCM <-> HN: 0.1", "HN <-> HN: 0.95"))
S_HCM <- createCompartment(name = "S",
distribution = createDistribution("transitionProb", transitionProb = 0.0),
initialValue = 1000)
I_HCM <- createCompartment(name = "I",
distribution = createDistribution("exponential", rate = 0.3),
initialValue = 1)
R_HCM <- createCompartment(name = "R",
distribution = createDistribution("transitionProb", transitionProb = 0.0),
initialValue = 0)
S_HN <- createCompartment(name = "S",
distribution = createDistribution("transitionProb", transitionProb = 0.0),
initialValue = 699)
I_HN <- createCompartment(name = "I",
distribution = createDistribution("gamma", shape = 3, scale = 2),
initialValue = 1)
R_HN <- createCompartment(name = "R",
distribution = createDistribution("transitionProb", transitionProb = 0.0),
initialValue = 0)
HCM <- allCompartments(modelName = c("HCM"), transmissionRate = 1.5, S_HCM, I_HCM, R_HCM)
HN <- allCompartments(modelName = c("HN"), transmissionRate = 1.5, S_HN, I_HN, R_HN)
exportJSON <- allModels(daysFollowUp = 50002, timeStep = 0.01, modelStructure = ms,
infectiousComps = ic, contactAssumption = ca,
contacts = contacts, models = c(HCM, HN))
df <- simulation(exportJSON)
library(discreteModel)
library(discreteModel)
library(jsonlite)
library(gtools)
# Model
ms <- setModelStructure("S->I", "I->R")
ic <- setInfectiousComps("I")
ca <- setContactAssumption("location")
contacts <- createContact("location", c("HCM", "HN"), c("HCM <-> HCM: 0.85", "HCM <-> HN: 0.1", "HN <-> HN: 0.95"))
S_HCM <- createCompartment(name = "S",
distribution = createDistribution("transitionProb", transitionProb = 0.0),
initialValue = 1000)
I_HCM <- createCompartment(name = "I",
distribution = createDistribution("exponential", rate = 0.3),
initialValue = 1)
R_HCM <- createCompartment(name = "R",
distribution = createDistribution("transitionProb", transitionProb = 0.0),
initialValue = 0)
S_HN <- createCompartment(name = "S",
distribution = createDistribution("transitionProb", transitionProb = 0.0),
initialValue = 699)
I_HN <- createCompartment(name = "I",
distribution = createDistribution("gamma", shape = 3, scale = 2),
initialValue = 1)
R_HN <- createCompartment(name = "R",
distribution = createDistribution("transitionProb", transitionProb = 0.0),
initialValue = 0)
HCM <- allCompartments(modelName = c("HCM"), transmissionRate = 1.5, S_HCM, I_HCM, R_HCM)
HN <- allCompartments(modelName = c("HN"), transmissionRate = 1.5, S_HN, I_HN, R_HN)
exportJSON <- allModels(daysFollowUp = 50002, timeStep = 0.01, modelStructure = ms,
infectiousComps = ic, contactAssumption = ca,
contacts = contacts, models = c(HCM, HN))
df <- simulation(exportJSON)
View(df)
library(discreteModel)
library(jsonlite)
library(gtools)
# Model
ms <- setModelStructure("S->I", "I->R")
ic <- setInfectiousComps("I")
ca <- setContactAssumption("location")
contacts <- createContact("location", c("HCM", "HN"), c("HCM <-> HCM: 0.85", "HCM <-> HN: 0.1", "HN <-> HN: 0.95"))
S_HCM <- createCompartment(name = "S",
distribution = createDistribution("transitionProb", transitionProb = 0.0),
initialValue = 1000)
I_HCM <- createCompartment(name = "I",
distribution = createDistribution("exponential", rate = 0.3),
initialValue = 1)
R_HCM <- createCompartment(name = "R",
distribution = createDistribution("transitionProb", transitionProb = 0.0),
initialValue = 0)
S_HN <- createCompartment(name = "S",
distribution = createDistribution("transitionProb", transitionProb = 0.0),
initialValue = 699)
I_HN <- createCompartment(name = "I",
distribution = createDistribution("gamma", shape = 3, scale = 2),
initialValue = 1)
R_HN <- createCompartment(name = "R",
distribution = createDistribution("transitionProb", transitionProb = 0.0),
initialValue = 0)
HCM <- allCompartments(modelName = c("HCM"), transmissionRate = 1.5, S_HCM, I_HCM, R_HCM)
HN <- allCompartments(modelName = c("HN"), transmissionRate = 1.5, S_HN, I_HN, R_HN)
exportJSON <- allModels(daysFollowUp = 50002, timeStep = 0.01, modelStructure = ms,
infectiousComps = ic,
contacts = contacts, models = c(HCM, HN))
df <- simulation(exportJSON)
library(discreteModel)
library(jsonlite)
library(gtools)
# Model
ms <- setModelStructure("S->I", "I->R")
ic <- setInfectiousComps("I")
ca <- setContactAssumption("location")
contacts <- createContact("location", c("HCM", "HN"), c("HCM <-> HCM: 0.85", "HCM <-> HN: 0.1", "HN <-> HN: 0.95"))
S_HCM <- createCompartment(name = "S",
distribution = createDistribution("transitionProb", transitionProb = 0.0),
initialValue = 1000)
I_HCM <- createCompartment(name = "I",
distribution = createDistribution("exponential", rate = 0.3),
initialValue = 1)
R_HCM <- createCompartment(name = "R",
distribution = createDistribution("transitionProb", transitionProb = 0.0),
initialValue = 0)
S_HN <- createCompartment(name = "S",
distribution = createDistribution("transitionProb", transitionProb = 0.0),
initialValue = 699)
I_HN <- createCompartment(name = "I",
distribution = createDistribution("gamma", shape = 3, scale = 2),
initialValue = 1)
R_HN <- createCompartment(name = "R",
distribution = createDistribution("transitionProb", transitionProb = 0.0),
initialValue = 0)
HCM <- allCompartments(modelName = c("HCM"), transmissionRate = 1.5, S_HCM, I_HCM, R_HCM)
HN <- allCompartments(modelName = c("HN"), transmissionRate = 1.5, S_HN, I_HN, R_HN)
exportJSON <- allModels(daysFollowUp = 50002, timeStep = 0.01, modelStructure = ms,
infectiousComps = ic, contactAssumption = ca,
contacts = contacts, models = c(HCM, HN))
df <- simulation(exportJSON)
library(discreteModel)
library(discreteModel)
library(jsonlite)
library(gtools)
# Model
ms <- setModelStructure("S->I", "I->R")
ic <- setInfectiousComps("I")
ca <- setContactAssumption("location")
contacts <- createContact("location", c("HCM", "HN"), c("HCM <-> HCM: 0.85", "HCM <-> HN: 0.1", "HN <-> HN: 0.95"))
S_HCM <- createCompartment(name = "S",
distribution = createDistribution("transitionProb", transitionProb = 0.0),
initialValue = 1000)
I_HCM <- createCompartment(name = "I",
distribution = createDistribution("exponential", rate = 0.3),
initialValue = 1)
R_HCM <- createCompartment(name = "R",
distribution = createDistribution("transitionProb", transitionProb = 0.0),
initialValue = 0)
S_HN <- createCompartment(name = "S",
distribution = createDistribution("transitionProb", transitionProb = 0.0),
initialValue = 699)
I_HN <- createCompartment(name = "I",
distribution = createDistribution("gamma", shape = 3, scale = 2),
initialValue = 1)
R_HN <- createCompartment(name = "R",
distribution = createDistribution("transitionProb", transitionProb = 0.0),
initialValue = 0)
HCM <- allCompartments(modelName = c("HCM"), transmissionRate = 1.5, S_HCM, I_HCM, R_HCM)
HN <- allCompartments(modelName = c("HN"), transmissionRate = 1.5, S_HN, I_HN, R_HN)
exportJSON <- allModels(daysFollowUp = 50002, timeStep = 0.01, modelStructure = ms,
infectiousComps = ic, contactAssumption = ca,
contacts = contacts, models = c(HCM, HN))
df <- simulate(exportJSON)
usethis::use_package("jsonlite")
usethis::use_package("gtools")
library(discreteModel)
# Model
ms <- setModelStructure("S->I", "I->R")
# Model
ms <- setModelStructure("S->I", "I->R")
ic <- setInfectiousComps("I")
ca <- setContactAssumption("location")
contacts <- createContact("location", c("HCM", "HN"), c("HCM <-> HCM: 0.85", "HCM <-> HN: 0.1", "HN <-> HN: 0.95"))
library(discreteModel)
library(jsonlite)
# Model
ms <- setModelStructure("S->I", "I->R")
ic <- setInfectiousComps("I")
ca <- setContactAssumption("location")
contacts <- createContact("location", c("HCM", "HN"), c("HCM <-> HCM: 0.85", "HCM <-> HN: 0.1", "HN <-> HN: 0.95"))
S_HCM <- createCompartment(name = "S",
distribution = createDistribution("transitionProb", transitionProb = 0.0),
initialValue = 1000)
I_HCM <- createCompartment(name = "I",
distribution = createDistribution("exponential", rate = 0.3),
initialValue = 1)
R_HCM <- createCompartment(name = "R",
distribution = createDistribution("transitionProb", transitionProb = 0.0),
initialValue = 0)
S_HN <- createCompartment(name = "S",
distribution = createDistribution("transitionProb", transitionProb = 0.0),
initialValue = 699)
I_HN <- createCompartment(name = "I",
distribution = createDistribution("gamma", shape = 3, scale = 2),
initialValue = 1)
R_HN <- createCompartment(name = "R",
distribution = createDistribution("transitionProb", transitionProb = 0.0),
initialValue = 0)
HCM <- allCompartments(modelName = c("HCM"), transmissionRate = 1.5, S_HCM, I_HCM, R_HCM)
HN <- allCompartments(modelName = c("HN"), transmissionRate = 1.5, S_HN, I_HN, R_HN)
exportJSON <- allModels(daysFollowUp = 50002, timeStep = 0.01, modelStructure = ms,
infectiousComps = ic, contactAssumption = ca,
contacts = contacts, models = c(HCM, HN))
df <- simulate(exportJSON)
library(discreteModel)
# Model
ms <- setModelStructure("S->I", "I->R")
source('~/Dropbox/oucru/rcpp/testRcpp/test.R')
